Requirements:
   1. Control plane t2.medium 2cp, 2gb ram
   2. 2 workers nodes

SSH Permission:
chmod 600 ram.pem
ssh-keygen
chmod 600 
###
step1: install docker in all servers

#!/bin/bash
sudo apt update -y
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
sudo apt install -y docker.io
sudo systemctl enable docker
sudo systemctl start docker
sudo usermod -aG docker ubuntu
newgrp docker
docker --version

###
step2: Download RKE binary in masterplane or local
###
RKE installtion:

#!/bin/bash
wget https://github.com/rancher/rke/releases/download/v1.8.7/rke_linux-amd64 -O rke
chmod +x rke
sudo mv rke /usr/local/bin/rke
rke --version

###
step3: Rancher Images:

kubernetes: rke-extended-life/hyperkube:v1.32.8-rancher1
kubernetes: rancher/hyperkube:v1.27.14-rancher1
kubernetes_version: "v1.25.16-rancher2-1"
kubernetes: rancher/hardened-kubernetes:v1.27.14-rancher1-1
rancher/hyperkube:v1.27.14-rancher1


###
step 4: install kubectl

curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
chmod +x kubectl
mkdir -p ~/.local/bin
mv ./kubectl ~/.local/bin/kubectl
# and then append (or prepend) ~/.local/bin to $PATH
sudo kubectl version --client

###
step:5 To copy config file
scp -i "deep.pem" ./kube_config_cluster.yml ubuntu@54.157.215.567:~/kube_config_cluster.yml

###
step:6
sudo chown ubuntu:ubuntu kube_config_cluster.yml
chmod 600 kube_config_cluster.yml
export KUBECONFIG=./kube_config_cluster.yml
kubectl get nodes
kubectl get pods -A

########################################

Rancher GUI Installation:


step:7 Install Helm (v3)
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
helm version

###
Step 8: Install cert-manager (for HTTPS)
helm repo add jetstack https://charts.jetstack.io
helm repo update

kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/cert-manager.crds.yaml

kubectl create namespace cert-manager

helm install cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --version v1.15.0

Check pods:
kubectl get pods -n cert-manager

###
step 11: Install Rancher
kubectl create namespace cattle-system
helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
helm repo update

helm install rancher rancher-latest/rancher \
  --namespace cattle-system \
  --set hostname=rancher.18.207.155.93.nip.io \
  --set replicas=1

Check Pod Logs (Optional):
kubectl logs -f -n cattle-system deployment/rancher
https://rancher.3.84.971.331.nip.io

###
step 12: Wait for Rancher to Start
kubectl -n cattle-system get pods

###
Step 13: Access Rancher GUI
kubectl -n cattle-system get svc rancher

Rancher generates a bootstrap admin password in a secret. Get it with:
kubectl get secret -n cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword | base64decode}}{{"\n"}}'

Verify Cluster and Services:
kubectl get pods -A
kubectl get svc -n cattle-system

###
Rancher Uninstall: 
helm uninstall rancher -n cattle-system
kubectl delete namespace cattle-system

###
step 14: Change to NodePort (Quick & Easy
kubectl -n cattle-system patch svc rancher -p '{"spec": {"type": "NodePort"}}'
kubectl -n cattle-system get svc rancher



helm uninstall rancher -n cattle-system
helm uninstall cert-manager -n cert-manager
kubectl delete namespace cattle-system --wait=false
kubectl delete namespace cert-manager --wait=false

